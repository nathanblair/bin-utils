#!/usr/bin/env sh

state='/sys/power/state'
mem_sleep_path='/sys/power/mem_sleep'

suspend_to_mem() {
  echo "Suspending to RAM..." >&2
  echo "Writing 'deep' to: ${mem_sleep_path}" >&2
  echo "deep" > "${mem_sleep_path}" || return 2
  echo "Writing "mem" to: ${state_path}" >&2
  echo "mem" > "${state_path}" || return 2
  echo "Waking from RAM..." >&2
}

suspend_to_idle() {
  echo "Suspending to Idle..." >&2

  state="freeze"

  echo "Not Implemented!" >&2
  return 1
}

poweron_standby() {
  echo "Power-On Suspend..." >&2

  state="standby"

  echo "Not Implemented!" >&2
  return 1
}

suspend_to_disk() {
  echo "Suspending to Disk (hibernating)..." >&2

  state="disk"

  echo "Not Implemented!" >&2
  return 1
}

showUsage() {
  echo "Potential states: [${potential_states}]"
  echo "Default is 'mem'"
}

potential_states=$(cat /sys/power/state)
case $1 in
  '--help'|'-help'|'-h'|'help'|'h')
    showUsage
    exit 0;;
esac

if [ ! -z $1 ]; then
  suspend_state=$1
else
  suspend_state='mem'
fi

if [ ! -z "${potential_states##*$suspend_state*}" ]; then
  echo "${suspend_state} not in [${potential_states}]"
  exit 1
fi

case $suspend_state in
  'mem')
    suspend_to_mem
    ;;
  'freeze')
    suspend_to_idle
    ;;
  'disk')
    suspend_to_disk
    ;;
  'standby')
    poweron_standby
    ;;
esac

